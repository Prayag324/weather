{"version":3,"sources":["index.js"],"names":["Header","className","App","bar","type","placeholder","onChange","event","setCity","value","state","city","onClick","find","handleChangeOfComment","setState","comment","target","addComment","listOfComments","commentBox","length","map","eachElm","alt","src","otherContent","weatherInfo","wind","humidity","pressure","maxTemp","minTemp","sunrise","sunset","loading","a","url","fetch","response","json","myJson","console","log","weather","loc","name","sys","country","iconURL","icon","main","speed","Math","floor","temp_max","temp_min","sr","sunIndex","ss","load","today","Date","day","getDate","mon","date","year","getUTCFullYear","getDay","getMonth","this","cod","temp","Component","toUTCString","slice","render","document","getElementById"],"mappings":"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","file":"static/js/main.96f60d49.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\n\nfunction Header(){\n  return (\n    <div>\n      <div className=\"hdr\"><h2 className=\"hdr-content\">Weather App</h2></div>\n      \n    </div>\n    \n  )\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React',\n      city: '',\n      loading: true,\n      src:false,\n      weather: null,\n      loc: '',\n      day: '',\n      date: '',\n      iconURL: '',\n      weatherInfo: '',\n      wind: '',\n      humidity: '',\n      pressure: '',\n      maxTemp: '',\n      minTemp: '',\n      sunrise: '',\n      sunset: '',\n      comment: '',\n      listOfComments: [],\n    };\n  }\n\n  bar = () =>{\n    return (\n      <div className=\"bar\">\n        <input type=\"text\" placeholder=\"Enter City Name...\" onChange={(event)=>this.setCity(event)} value={this.state.city} />\n        <button onClick={this.find}>Search</button>\n        </div>\n    )\n  }\n\n  handleChangeOfComment=event =>{\n    this.setState({\n      comment:event.target.value,\n    });\n  };\n\n  addComment = event =>{\n    this.setState({\n      listOfComments: [...this.state.listOfComments,this.state.comment],\n      comment:\"\"\n    });\n  };\n\n  commentBox = () =>{\n    return(\n      <div className=\"cmntContainer\">\n        <input onChange={event => this.handleChangeOfComment(event)}\n      value={this.state.comment} placeholder=\"Enter your comment here...\" /><br />\n        <button onClick={this.addComment}>Comment</button>\n        <div>\n          Comments({this.state.listOfComments.length})<br/>\n          \n          {\n            this.state.listOfComments.map(eachElm =>(\n              <div className=\"listCmnt\"><img alt=\"hello\" src=\"https://png.pngtree.com/png-vector/20190423/ourmid/pngtree-user-icon-vector-illustration-in-glyph-style-for-any-purpose-png-image_975597.jpg\" /> <p>{eachElm}</p></div>\n            ))\n          }\n\n\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    if(this.state.loading){\n      return (<div>\n        <Header />\n        {this.bar()}\n      </div>)\n    }\n    else if(this.state.src){\n      return (<div>\n        <Header />\n        {this.bar()}\n        <center><div className=\"searching\"><p>Searching City name...</p></div></center>\n      </div>)\n    }\n    else if(this.state.weather.cod==404){\n      return (<div>\n        <Header />\n        {this.bar()}\n        <center><div className=\"notfound\"><p>City Name not found</p></div></center>\n      </div>)\n    }\n    else{\n    return (\n      <div>\n        <Header/>\n\n        {this.bar()}\n        <center>\n        <div className=\"container\">\n          <div className=\"time\"><div>{this.state.loc}, </div> <div>{this.load()}</div></div>\n\n          <div className=\"content\">\n            <div className=\"temprature\">\n            <div>{Math.floor(this.state.weather.main.temp - 273)}°C</div>\n            <div><img src={this.state.iconURL}  /></div>\n            </div>\n            <div>{this.otherContent()}</div>\n          </div>\n\n        </div>\n        </center>\n        {this.commentBox()}\n      </div>\n    );}\n  }\n\n  otherContent = () =>{\n    return(\n      <div className=\"otherContent\">\n        <div>\n          Weather: <b>{this.state.weatherInfo}</b><br />\n          Wind: <b>{this.state.wind}</b>\n        </div>\n        <div>\n          Humidity: <b>{this.state.humidity}</b><br />\n          Pressure: <b>{this.state.pressure}</b>\n        </div>\n        <div>\n          Max Temp: <b>{this.state.maxTemp}</b><br />\n          Min Temp: <b>{this.state.minTemp}</b>\n        </div>\n        <div>\n          Sunrise: <b>{this.state.sunrise}</b><br />\n          Sunset: <b>{this.state.sunset}</b>\n        </div>\n      </div>\n    )\n  }\n\n  setCity = (event) =>{\n    //console.log(this.state.name)\n    this.setState({\n      city: event.target.value,\n        loading:false,\n        src:true\n    })\n  };\n\n  find = async() =>{\n    const url=`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=222e7a66e12940066adc0c9db925f076`;\n    const response = await fetch(url);\n    const myJson = await response.json();\n    console.log(myJson);\n    this.setState({loading:false, weather:myJson, src:false})\n    this.setState({loc: myJson.name+\", \"+myJson.sys.country})\n    this.setState({\n      iconURL: \"https://openweathermap.org/img/w/\" + myJson.weather[0].icon + \".png\",\n      weatherInfo: myJson.weather[0].main,\n      wind: myJson.wind.speed,\n      humidity: myJson.main.humidity,\n      pressure: myJson.main.pressure,\n      maxTemp: Math.floor(myJson.main.temp_max - 273)+\"°C\",\n      minTemp: Math.floor(myJson.main.temp_min - 273)+\"°C\",\n    })\n    var sr=myJson.sys.sunrise;\n    sr=sunIndex(sr);\n    var ss=myJson.sys.sunset;\n    ss=sunIndex(ss);\n    this.setState({\n      sunset: ss,\n      sunrise: sr\n    })\n  };\n\n  \n\n  load = () =>{\n    var today=new Date()\n    var d=today.getDate()\n    var day=''\n    var mon=''\n    var date=today.getDate()\n    var year=today.getUTCFullYear();\n    if(today.getDay()==1)\n      day='Mon'\n    else if(today.getDay()==2)\n      day='Tues'\n    else if(today.getDay()==3)\n      day='Wed'\n    else if(today.getDay()==4)\n      day='Thu'\n    else if(today.getDay()==5)\n      day='Fri'\n    else if(today.getDay()==6)\n      day='Sat'\n    else if(today.getDay()==7)\n      day='Sun'\n    \n    if(today.getMonth()==1)\n      mon='Jan'\n    else if(today.getMonth()==2)\n      mon='Feb'\n    else if(today.getMonth()==3)\n      mon='Mar'\n    else if(today.getMonth()==4)\n      mon='Apr'\n    else if(today.getMonth()==5)\n      mon='May'\n    else if(today.getMonth()==6)\n      mon='Jun'\n    else if(today.getMonth()==7)\n      mon='Jul'\n    else if(today.getMonth()==8)\n      mon='Aug'\n    else if(today.getMonth()==9)\n      mon='Sept'\n    else if(today.getMonth()==10)\n      mon='Oct'\n    else if(today.getMonth()==11)\n      mon='Nov'\n    else if(today.getMonth()==12)\n      mon='Dec'\n\n\n    return (<div>{day} {mon} {date} {year}</div>)\n\n  }\n\n}\nfunction sunIndex(sr){\n    var obj=new Date(sr*1000);\n    var d=obj.toUTCString();\n    return d.slice(-12,-4);\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}