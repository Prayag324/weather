{"version":3,"sources":["index.js"],"names":["Header","className","App","bar","type","placeholder","onChange","event","setCity","value","state","city","onClick","find","handleChangeOfComment","setState","comment","target","addComment","listOfComments","commentBox","length","map","eachElm","alt","src","otherContent","weatherInfo","wind","humidity","pressure","maxTemp","minTemp","sunrise","sunset","loading","a","url","fetch","response","json","myJson","console","log","weather","loc","name","sys","country","iconURL","icon","main","speed","Math","floor","temp_max","temp_min","sr","sunIndex","ss","load","today","Date","day","mon","date","getDate","year","getUTCFullYear","getDay","getMonth","this","cod","temp","Component","toUTCString","slice","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f80695b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div>\n      <div className=\"hdr\">\n        <h2 className=\"hdr-content\">Weather App</h2>\n      </div>\n    </div>\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"React\",\n      city: \"\",\n      loading: true,\n      src: false,\n      weather: null,\n      loc: \"\",\n      day: \"\",\n      date: \"\",\n      iconURL: \"\",\n      weatherInfo: \"\",\n      wind: \"\",\n      humidity: \"\",\n      pressure: \"\",\n      maxTemp: \"\",\n      minTemp: \"\",\n      sunrise: \"\",\n      sunset: \"\",\n      comment: \"\",\n      listOfComments: []\n    };\n  }\n\n  bar = () => {\n    return (\n      <div className=\"bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter City Name...\"\n          onChange={event => this.setCity(event)}\n          value={this.state.city}\n        />\n        <button onClick={this.find}>Search</button>\n      </div>\n    );\n  };\n\n  handleChangeOfComment = event => {\n    this.setState({\n      comment: event.target.value\n    });\n  };\n\n  addComment = event => {\n    this.setState({\n      listOfComments: [...this.state.listOfComments, this.state.comment],\n      comment: \"\"\n    });\n  };\n\n  commentBox = () => {\n    return (\n      <div className=\"cmntContainer\">\n        <input\n          onChange={event => this.handleChangeOfComment(event)}\n          value={this.state.comment}\n          placeholder=\"Enter your comment here...\"\n        />\n        <br />\n        <button onClick={this.addComment}>Comment</button>\n        <div>\n          Comments({this.state.listOfComments.length})<br />\n          {this.state.listOfComments.map(eachElm => (\n            <div className=\"listCmnt\">\n              <img\n                alt=\"hello\"\n                src=\"https://png.pngtree.com/png-vector/20190423/ourmid/pngtree-user-icon-vector-illustration-in-glyph-style-for-any-purpose-png-image_975597.jpg\"\n              />{\" \"}\n              <p>{eachElm}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div>\n          <Header />\n          {this.bar()}\n        </div>\n      );\n    } else if (this.state.src) {\n      return (\n        <div>\n          <Header />\n          {this.bar()}\n          <center>\n            <div className=\"searching\">\n              <p>Searching City name...</p>\n            </div>\n          </center>\n        </div>\n      );\n    } else if (this.state.weather.cod === 404) {\n      return (\n        <div>\n          <Header />\n          {this.bar()}\n          <center>\n            <div className=\"notfound\">\n              <p>City Name not found</p>\n            </div>\n          </center>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Header />\n\n          {this.bar()}\n          <center>\n            <div className=\"container\">\n              <div className=\"time\">\n                <div>{this.state.loc}, </div> <div>{this.load()}</div>\n              </div>\n\n              <div className=\"content\">\n                <div className=\"temprature\">\n                  <div>{Math.floor(this.state.weather.main.temp - 273)}°C</div>\n                  <div>\n                    <img src={this.state.iconURL} alt={\"img\"} />\n                  </div>\n                </div>\n                <div>{this.otherContent()}</div>\n              </div>\n            </div>\n          </center>\n          {this.commentBox()}\n        </div>\n      );\n    }\n  }\n\n  otherContent = () => {\n    return (\n      <div className=\"otherContent\">\n        <div>\n          Weather: <b>{this.state.weatherInfo}</b>\n          <br />\n          Wind: <b>{this.state.wind}</b>\n        </div>\n        <div>\n          Humidity: <b>{this.state.humidity}</b>\n          <br />\n          Pressure: <b>{this.state.pressure}</b>\n        </div>\n        <div>\n          Max Temp: <b>{this.state.maxTemp}</b>\n          <br />\n          Min Temp: <b>{this.state.minTemp}</b>\n        </div>\n        <div>\n          Sunrise: <b>{this.state.sunrise}</b>\n          <br />\n          Sunset: <b>{this.state.sunset}</b>\n        </div>\n      </div>\n    );\n  };\n\n  setCity = event => {\n    //console.log(this.state.name)\n    this.setState({\n      city: event.target.value,\n      loading: false,\n      src: true\n    });\n  };\n\n  find = async () => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=222e7a66e12940066adc0c9db925f076`;\n    const response = await fetch(url);\n    const myJson = await response.json();\n    console.log(myJson);\n    this.setState({ loading: false, weather: myJson, src: false });\n    this.setState({ loc: myJson.name + \", \" + myJson.sys.country });\n    this.setState({\n      iconURL:\n        \"https://openweathermap.org/img/w/\" + myJson.weather[0].icon + \".png\",\n      weatherInfo: myJson.weather[0].main,\n      wind: myJson.wind.speed,\n      humidity: myJson.main.humidity,\n      pressure: myJson.main.pressure,\n      maxTemp: Math.floor(myJson.main.temp_max - 273) + \"°C\",\n      minTemp: Math.floor(myJson.main.temp_min - 273) + \"°C\"\n    });\n    var sr = myJson.sys.sunrise;\n    sr = sunIndex(sr);\n    var ss = myJson.sys.sunset;\n    ss = sunIndex(ss);\n    this.setState({\n      sunset: ss,\n      sunrise: sr\n    });\n  };\n\n  load = () => {\n    var today = new Date();\n    var day = \"\";\n    var mon = \"\";\n    var date = today.getDate();\n    var year = today.getUTCFullYear();\n    if (today.getDay() === 1) day = \"Mon\";\n    else if (today.getDay() === 2) day = \"Tues\";\n    else if (today.getDay() === 3) day = \"Wed\";\n    else if (today.getDay() === 4) day = \"Thu\";\n    else if (today.getDay() === 5) day = \"Fri\";\n    else if (today.getDay() === 6) day = \"Sat\";\n    else if (today.getDay() === 7) day = \"Sun\";\n\n    if (today.getMonth() === 1) mon = \"Jan\";\n    else if (today.getMonth() === 2) mon = \"Feb\";\n    else if (today.getMonth() === 3) mon = \"Mar\";\n    else if (today.getMonth() === 4) mon = \"Apr\";\n    else if (today.getMonth() === 5) mon = \"May\";\n    else if (today.getMonth() === 6) mon = \"Jun\";\n    else if (today.getMonth() === 7) mon = \"Jul\";\n    else if (today.getMonth() === 8) mon = \"Aug\";\n    else if (today.getMonth() === 9) mon = \"Sept\";\n    else if (today.getMonth() === 10) mon = \"Oct\";\n    else if (today.getMonth() === 11) mon = \"Nov\";\n    else if (today.getMonth() === 12) mon = \"Dec\";\n\n    return (\n      <div>\n        {day} {mon} {date} {year}\n      </div>\n    );\n  };\n}\nfunction sunIndex(sr) {\n  var obj = new Date(sr * 1000);\n  var d = obj.toUTCString();\n  return d.slice(-12, -4);\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}